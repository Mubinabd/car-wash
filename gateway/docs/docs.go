// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/booking": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API lists all bookings with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/booking"
                ],
                "summary": "List all bookings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListAllBookingsResp"
                        }
                    },
                    "400": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/booking/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API adds a new booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/booking"
                ],
                "summary": "Add booking",
                "parameters": [
                    {
                        "description": "Add booking Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"booking created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/booking/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API retrieves a booking by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/booking"
                ],
                "summary": "Get booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetBookingResp"
                        }
                    },
                    "400": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API updates an existing booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/booking"
                ],
                "summary": "Update booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update booking Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"booking updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API deletes a booking by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/booking"
                ],
                "summary": "Delete booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"booking deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error description",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/cart/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a new cart.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Cart"
                ],
                "summary": "CREATE cart",
                "parameters": [
                    {
                        "description": "Cart data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateCartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/cart/{id}": {
            "get": {
                "description": "Retrieve a specific cart by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Cart"
                ],
                "summary": "GET cart by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Cart"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/notification/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Notification"
                ],
                "summary": "CREATE notification",
                "parameters": [
                    {
                        "description": "Notification",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddNotificationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/notification/{id}/read": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API marks a notification as read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Notification"
                ],
                "summary": "MARK notification as read",
                "parameters": [
                    {
                        "description": "Notification",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.MarkNotificationAsReadReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/payment": {
            "get": {
                "description": "This API retrieves all Payments with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Payment"
                ],
                "summary": "GET all Payments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListAllPaymentsResp"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a Payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Payment"
                ],
                "summary": "CREATE Payment",
                "parameters": [
                    {
                        "description": "Payment",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddPaymentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/{id}": {
            "get": {
                "description": "This API retrieves a Payment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/Payment"
                ],
                "summary": "GET Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Payment"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/provider": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Lists a new provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/provider"
                ],
                "summary": "List all provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Name",
                        "name": "company_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListAllProvidersResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/provider/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/provider"
                ],
                "summary": "CREATE provider",
                "parameters": [
                    {
                        "description": "Provider",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.RegisterProviderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/provider/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API gets a  provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/provider"
                ],
                "summary": "Get provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "description",
                        "name": "description",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.SearchProvidersResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/provider/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Gets a  provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/provider"
                ],
                "summary": "Get provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "provider Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetProviderResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Put s a new provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/provider"
                ],
                "summary": "Put  provider",
                "parameters": [
                    {
                        "description": "Put  provider Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateProviderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "provider updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API deleted a new provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/provider"
                ],
                "summary": "Delete provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "provider Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "provider deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/review": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Lists a new review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/review"
                ],
                "summary": "List all review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking iD",
                        "name": "booking_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "provider ID",
                        "name": "provider_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListAllReviewsResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/review/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/review"
                ],
                "summary": "CREATE review",
                "parameters": [
                    {
                        "description": "review",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddReviewReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/review/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Gets a  review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/review"
                ],
                "summary": "Get review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Review"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Put s a new review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/review"
                ],
                "summary": "Put  review",
                "parameters": [
                    {
                        "description": " review Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateReviewsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "review updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API deleted a new review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/review"
                ],
                "summary": "Delete review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "review deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/service": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Lists a new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "List all service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListAllServicesResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/service/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "CREATE service",
                "parameters": [
                    {
                        "description": "service",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddServiceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/service/priceRange": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API gets a  service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "Get service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "min_price",
                        "name": "min_price",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "max_price",
                        "name": "max_price",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetServicesByPriceRangeResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/service/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API gets a  service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "Get service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.SearchServicessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/service/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Gets a  service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "Get service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetServicesResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API Put s a new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "Put  service",
                "parameters": [
                    {
                        "description": "Put  service Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateServiceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API deleted a new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carwash/service"
                ],
                "summary": "Delete service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genproto.AddBookingReq": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/definitions/genproto.GeoPoint"
                },
                "provider_id": {
                    "type": "string"
                },
                "schudule_time": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddNotificationReq": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddPaymentReq": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "booking_id": {
                    "type": "string"
                },
                "cart_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genproto.AddReviewReq": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddServiceReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "genproto.Booking": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/genproto.GeoPoint"
                },
                "provider_id": {
                    "type": "string"
                },
                "schudule_time": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.Cart": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateCartReq": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.GeoPoint": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "genproto.GetBookingResp": {
            "type": "object",
            "properties": {
                "booking": {
                    "$ref": "#/definitions/genproto.Booking"
                }
            }
        },
        "genproto.GetProviderResp": {
            "type": "object",
            "properties": {
                "provider": {
                    "$ref": "#/definitions/genproto.Provider"
                }
            }
        },
        "genproto.GetServicesByPriceRangeResp": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Services"
                    }
                }
            }
        },
        "genproto.GetServicesResp": {
            "type": "object",
            "properties": {
                "services": {
                    "$ref": "#/definitions/genproto.Services"
                }
            }
        },
        "genproto.ListAllBookingsResp": {
            "type": "object",
            "properties": {
                "bookings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Booking"
                    }
                }
            }
        },
        "genproto.ListAllPaymentsResp": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Payment"
                    }
                }
            }
        },
        "genproto.ListAllProvidersResp": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Provider"
                    }
                }
            }
        },
        "genproto.ListAllReviewsResp": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Review"
                    }
                }
            }
        },
        "genproto.ListAllServicesResp": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Services"
                    }
                }
            }
        },
        "genproto.MarkNotificationAsReadReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "genproto.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "booking_id": {
                    "type": "string"
                },
                "cart_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "genproto.Provider": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string"
                },
                "average_rating": {
                    "type": "number"
                },
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/genproto.GeoPoint"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.RegisterProviderReq": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string"
                },
                "average_rating": {
                    "type": "number"
                },
                "company_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/genproto.GeoPoint"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.Review": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.SearchProvidersResp": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Provider"
                    }
                }
            }
        },
        "genproto.SearchServicessResp": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Services"
                    }
                }
            }
        },
        "genproto.Services": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateBookingReq": {
            "type": "object",
            "properties": {
                "booking": {
                    "$ref": "#/definitions/genproto.Booking"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateProviderReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/genproto.Provider"
                }
            }
        },
        "genproto.UpdateReviewsReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "review": {
                    "$ref": "#/definitions/genproto.Review"
                }
            }
        },
        "genproto.UpdateServiceReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
