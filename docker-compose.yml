version: '3.8'

services:
  api-gateway:
    container_name: gateway
    build: ./gateway
    depends_on:
      - carwash-service
    ports:
      - "8070:8070"
    networks:
      - mynetwork
    volumes:
      - ./gateway:/home/mubina/Desktop/exams/5-exam/gateway

  auth-service:
    container_name: auth_service
    build: ./auth
    depends_on:
      - postgres-db
      - carwash-service
      - kafka
      - redis
      - zookeeper
    ports:
      - "8090:8090"
    networks:
      - mynetwork

  carwash-service:
    container_name: carwash_service
    build: ./service
    depends_on:
      - mongo-db
    ports:
      - "8051:8050"
    networks:
      - mynetwork
    environment:
      MONGO_URI: mongodb://mongo-db:8051/carwash

  postgres-db:
    container_name: postgres_db
    image: postgres:16.3
    environment:
      POSTGRES_HOST: postgres_db 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: auth
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    networks:
      - mynetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d auth -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  migrate:
    image: migrate/migrate
    networks:
      - mynetwork
    volumes:
      - ./auth/migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://postgres:1234@postgres_db:5432/auth?sslmode=disable", "up" ]
    depends_on:
      - postgres-db

  redis:
    image: redis
    ports:
      - "6375:6379"
    networks:
      - mynetwork

  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    ports:
      - "8050:8050"
    networks:
      - mynetwork
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - mynetwork

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  mynetwork:
    driver: bridge

volumes:
  mongo_data:
  postgres_data:
